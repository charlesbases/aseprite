name: build
on: [ push, pull_request ]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
        build_type: [ Release ]
        enable_ui: [ on ]
        include:
          - os: windows-latest
            build_type: Release
            enable_ui: on
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1
        if: runner.os == 'Linux'
        with:
          key: ${{ matrix.os }}-${{ matrix.enable_ui }}
      - uses: seanmiddleditch/gha-setup-ninja@master
      - uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'
      - name: Generating Makefiles
        shell: bash
        run: |
          curl -s -L https://github.com/charlesbases/aseprite/releases/download/v1.3.7/skia_win_x64.zip --output skia.zip
          unzip -q -d skia skia.zip
          
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DENABLE_UI=${{ matrix.enable_ui }} \
            -DENABLE_CCACHE=off \
            -DLAF_BACKEND=skia \
            -DSKIA_DIR=./skia \
            -DSKIA_LIBRARY_DIR=./skia/out/Release-x64 \
            -DSKIA_LIBRARY=./skia/out/Release-x64/skia.lib
      - name: Compiling
        shell: bash
        run: |
          cd build && ninja aseprite
          
          curl -s -L https://github.com/charlesbases/aseprite/releases/download/v1.3.7/libcrypto-1_1-x64.dll --output bin/libcrypto-1_1-x64.dll
      - uses: actions/upload-artifact@v3
        with:
          name: aseprite
          path: |
            D:/a/aseprite/aseprite/build/bin
